apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlinx-serialization'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: 'io.fabric'

kapt {
    generateStubs = true
    useBuildCache = true
}

buildscript {
    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
        mavenCentral()
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.30.0'
    }
}

repositories {
    maven { url 'https://maven.fabric.io/public' }
    mavenCentral()
}

dependencies {
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.8@aar') {
        transitive = true
    }
}

androidExtensions {
    experimental = true
}

android {
    compileSdkVersion 29

    sourceSets {
        main {
            java.srcDirs += 'src/main/kotlin'
        }
        test {
            resources.srcDirs += ['src/test/resources']
        }
        androidTest {
            resources.srcDirs += ['src/androidTest/resources']
        }
    }

    dataBinding {
        enabled = true
    }

    defaultConfig {
        applicationId "me.li2.movies"
        minSdkVersion 18
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    buildTypes {
        debug {
            debuggable = true
            signingConfig signingConfigs.debug
        }

        release {
            minifyEnabled true
            debuggable = false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "environment"

    productFlavors {
        development {
            dimension "environment"
            resValue "string", "app_name", "Vista Movies Dev"
            applicationIdSuffix ".dev"
        }

        uat {
            dimension "environment"
            applicationIdSuffix ".uat"
            resValue "string", "app_name", "Vista Movies UAT"
            applicationIdSuffix ".uat"
        }

        production {
            dimension "environment"
            resValue "string", "app_name", "Vista Movies"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    packagingOptions {
        pickFirst("META-INF/atomicfu.kotlin_module")
        pickFirst("META-INF/kotlinx-coroutines-core.kotlin_module")
    }

    testOptions {
        //used by robolectric
        unitTests.includeAndroidResources = true
    }
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    //MARK: The following are Test libs ---------------------------------------------------------------------

    //Unit Test
    testImplementation "org.assertj:assertj-core:$assertJcore_version"
    testImplementation "org.robolectric:robolectric:$robolectric_version"
    testImplementation "androidx.arch.core:core-testing:$androidx_arch_testing_version"
    testImplementation "com.google.truth:truth:$truth_version"
    //Required -- JUnit 4 framework
    testImplementation "junit:junit:$junit_version"
    //Optional -- Robolectric environment, note this should provide the robolectric artifact
    testImplementation "androidx.test:core:$testRunner_version_x"
    //Mockito
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlin_version"
    testImplementation "org.mockito:mockito-core:$mockito_core_version"

    androidTestImplementation "android.arch.core:core-testing:$core_testing_version"
    //optional - Test helpers
    androidTestImplementation "android.arch.navigation:navigation-testing:1.0.0-alpha08"
    androidTestImplementation "androidx.test:runner:$testRunner_version_x"
    androidTestImplementation "androidx.test.ext:truth:$androidx_truth_version"
    androidTestImplementation "androidx.test.ext:junit:$testRunner_version_x"
    //Mockito
    androidTestImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlin_version"
    androidTestImplementation "org.mockito:mockito-android:$mockito_core_version"
    //Core library
    androidTestImplementation "androidx.test:core:$testRunner_version_x"
    androidTestImplementation "androidx.test:rules:$testRunner_version_x"
    //Espresso dependencies
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoCore_version"
    androidTestImplementation "androidx.test.espresso:espresso-idling-resource:$espressoCore_version"


    //MARK: The following are AndroidX libs -----------------------------------------------------------------
    //Core
    implementation "androidx.appcompat:appcompat:$androidx_appcompat_version"
    implementation "androidx.core:core:$androidx_core_version"
    //Lifecycle
    implementation "androidx.lifecycle:lifecycle-common-java8:$androidx_lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$androidx_lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-reactivestreams:$androidx_lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime:$androidx_lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:1.0.0-alpha05"
    //Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    //Multidex
    implementation "androidx.multidex:multidex:$androidx_multidex_version"
    //Widgets
    implementation "androidx.cardview:cardview:$androidx_cardview_version"
    implementation "androidx.constraintlayout:constraintlayout:$androidx_constraintlayout_version"
    implementation "androidx.fragment:fragment-ktx:$androidx_fragment_version"
    implementation "androidx.paging:paging-runtime:$androidx_paging_version"
    implementation "androidx.recyclerview:recyclerview:$androidx_recyclerview_version"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0-alpha02"


    //MARK: The following are Kotlin libs -------------------------------------------------------------------

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "androidx.core:core-ktx:$androidx_ktx_version"
    //Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-common:$kotlinx_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-rx2:$kotlinx_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinx_coroutines_version"
    //Serialization
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$kotlinx_serialization_version"


    //MARK: The following are Google libs -------------------------------------------------------------------
    //Material
    implementation "com.google.android.material:material:$google_material_version"


    //MARK: The following are Network libs ------------------------------------------------------------------
    //Type-safe HTTP client
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    //Moshi
    api "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    api "com.squareup.moshi:moshi-kotlin:$moshi_version"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"
    api "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$retrofit_kotlinx_coroutines_version"
    implementation "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:$retrofit_kotlinx_serialization_converter"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3_version"
    implementation "com.serjltt.moshi:moshi-lazy-adapters:$moshi_lazy_adapters"


    //MARK: The following are Rx libs -----------------------------------------------------------------------
    //Rx Java
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroid_version"
    implementation "io.reactivex.rxjava2:rxkotlin:$rxKotlin_version"
    //Rx activity result
    implementation "com.github.VictorAlbertos:RxActivityResult:$rxActivityResult_version"
    //Rx Binding
    implementation "com.jakewharton.rxbinding3:rxbinding:$rxbinding3_version"
    //Rx Gallery
    implementation "com.github.marchinram:RxGallery:$rxImagePicker_version"
    //Rx Permission
    implementation "com.tbruyelle.rxpermissions2:rxpermissions:$rxPermission_version"


    //MARK: The following are Debug libs --------------------------------------------------------------------
    //Stetho
    debugImplementation "com.facebook.stetho:stetho:$stetho_version"
    debugImplementation "com.facebook.stetho:stetho-okhttp3:$stetho_version"


    //MARK: The following are 3rd Utility libs --------------------------------------------------------------
    //Anko
    implementation "org.jetbrains.anko:anko-commons:$anko_version"
    //Kotlin Dependency Injection
    implementation "org.kodein.di:kodein-di-generic-jvm:$kodein_version"
    implementation "org.kodein.di:kodein-di-conf-jvm:$kodein_version"
    implementation "org.kodein.di:kodein-di-framework-android-x:$kodein_androidx_version"
    implementation "org.kodein.di:kodein-di-framework-android-core:$kodein_androidx_version"
    //Timber
    implementation "com.jakewharton.timber:timber:$timber_version"


    //MARK: The following are 3rd View libs -----------------------------------------------------------------
    //Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    implementation "im.ene.toro3:toro:$toro_video_list_version"
    implementation "im.ene.toro3:toro-ext-exoplayer:$toro_video_list_version"
    implementation "com.google.android.exoplayer:exoplayer:$google_exoplayer_version"
}

apply plugin: 'kotlin-allopen'

allOpen {}