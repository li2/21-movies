# Production release workflow
#
# workflow will be triggered on Github tags created,
# jobs include:
# - junit test
# - automatically bump version code (simply +1) and version name (from tag).
# - build and sign App bundle file .aab,
# - upload the signed artifact to GitHub artifacts,
# - deploy the signed artifact to PlayStore.
#
name: Production Release CI

#
on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  unitTest:
    name: Run Unit Tests
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2

      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Unit tests
        run: ./gradlew test --stacktrace

  buildAppBundle:
    name: Generate artifact
    needs: unitTest
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2

      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      # use tags for the versions of our releases
      # https://gist.github.com/djyugg/efd3ad2c3c134c8e2d90
      # sed: can't read s/versionCode *[0-9]*/versionCode 4/: No such file or directory
      - name: Update release version
        run: |
          APP_BUILD_GRADLE=app/build.gradle
          CURRENT_VERSION_CODE=`grep versionCode ${APP_BUILD_GRADLE} | sed 's/ *//' | cut -d' ' -f2`
          NEXT_VERSION_CODE=`expr ${CURRENT_VERSION_CODE} + 1`
          sed -i "" "s/versionCode *[0-9]*/versionCode ${NEXT_VERSION_CODE}/" ${APP_BUILD_GRADLE}

          latest_release="$(git describe --match '[0-9]*\.[0-9]*\.[0-9]*' --abbrev=0 --tags)"
          NEXT_VERSION_NAME="versionName "\"$latest_release"\""
          sed -i "" "s/versionName *'.*'/versionName '${NEXT_VERSION_NAME}'/" ${APP_BUILD_GRADLE}

      - name: Build App bundle (.aab)
        run: ./gradlew bundleProductionRelease --stacktrace

      - name: Sign aab
        # https://github.com/marketplace/actions/sign-android-release
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/bundle/productionRelease
          signingKeyBase64: ${{ secrets.SIGNING_KEY_BASE64 }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: app-production-release
          path: ${{ env.SIGNED_RELEASE_FILE }}

  productionRelease:
    name: deploy the signed artifact to Play Store
    needs: buildAppBundle
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download artifact
        uses: actions/download-artifact@v1
        with:
          name: app-production-release

      - name: Deploy to Play Store
        # https://github.com/marketplace/actions/upload-android-release-to-play-store
        uses: r0adkll/upload-google-play@v1.0.4
        with:
          serviceAccountJsonPlainText: ${{ secrets.RELEASE_MANAGER_KEY }}
          packageName: me.li2.movies
          releaseFile: app-production-release/app-production-release.aab
          track: production
          # A provided userFraction must be between 0.0 and 1.0, exclusive-exclusive
          userFraction: 0.5
          # Unable to find 'whatsnew' directory @ whatsnew
          whatsNewDirectory: whatsnew
          #mappingFile: /app/build/outputs/mapping/productionRelease/mapping.txt